$alignOptions: start,
end,
center,
around,
stretch,
baseline;
$justifyOptions: start,
end,
center,
between,
around;
@function content-translate($option, $justify) {
    @if ($justify) {
        @if ($option==start) {
            @return flex-start;
        }
        @if ($option==end) {
            @return flex-end;
        }
        @if ($option==center) {
            @return center;
        }
        @if ($option==between) {
            @return space-between;
        }
        @if ($option==around) {
            @return space-around;
        }
        @return $option;
    }
    @if ($option==start) {
        @return flex-start;
    }
    @if ($option==end) {
        @return flex-end;
    }
    @if ($option==center) {
        @return center;
    }
    @if ($option==baseline) {
        @return baseline;
    }
    @if ($option==stretch) {
        @return stretch;
    }
    @return $option;
}

@mixin mixin-content($name) {
    [#{$name}="start"] {
        align-items: flex-start;
        justify-content: flex-start;
    }
    [#{$name}="center"] {
        align-items: center;
        justify-content: center;
    }
    [#{$name}="end"] {
        align-items: flex-end;
        justify-content: flex-end;
    }
    @each $align in $alignOptions {
        @each $justify in $justifyOptions {
            [#{$name}="#{$align} #{$justify}"] {
                align-items: content-translate($align, false);
                justify-content: content-translate($justify, true);
            }
        }
    }
}

@mixin mixin-flex($name, $step) {
    [#{$name}] {
        flex: 100 0 auto;
    }
    $i: $step;
    @while $i < 100 {
        [#{$name}="#{$i}"] {
            flex: $i 0 auto;
            width: percentage($i / 100);
        }
        $i: $i+$step;
    }
}

@mixin mixin-layout($name) {
    [#{$name}],
    [#{$name}="row"] {
        display: flex;
        flex-direction: row;
    }
    [#{$name}="column"] {
        display: flex;
        flex-direction: column;
    }
}

@mixin mixin-hide($name) {
    [#{$name}] {
        display: none;
    }
}

@mixin mixin-fill($name) {
    [#{$name}] {
        min-height: 100%;
        min-width: 100%;
    }
    [#{$name}="vertical"] {
        min-height: 100%;
    }
    [#{$name}="horizonal"] {
        min-width: 100%;
    }
}

@function shadow-top($depth) {
    $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
    $blur: nth(1.5 3 10 14 19, $depth) * 4px;
    $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));
    @return 0 $primary-offset $blur $color;
}

@function shadow-bottom($depth) {
    $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
    $blur: nth(1 3 3 5 6, $depth) * 4px;
    $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));
    @return 0 $primary-offset $blur $color;
}